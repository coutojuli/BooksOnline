@model BooksOnline.Models.User

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/Layout_Foundation.cshtml";
}

@using (Html.BeginForm("Edit", "Users", FormMethod.Post))
{
        @Html.AntiForgeryToken()

        <body>
            <div class="row column container" style="padding-top:30px">
                <div class="medium-11 medium-centered columns" style="padding:0px 30px 30px 30px; border:solid 1px rgba(0,0,0,.125);">
                    <div class="form-header">
                        <h2>
                            Edit User Details: <b>@Html.DisplayFor(model => model.FirstName) @Html.DisplayFor(model => model.LastName)</b>
                        </h2>
                    </div><br />
                    @*@Html.ValidationSummary(true, "", new { @class = "text-danger" })*@
                    @Html.HiddenFor(model => model.id)
                    @Html.HiddenFor(model => model.Role)
                    <div class="row">
                        <div class="small-6 columns">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.PasswordFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Password, "", new { style = "color: red", @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="small-6 columns">
                            <div class="form-group">
                                @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.PasswordFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { style = "color: red", @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="small-6 columns">
                            <div class="form-group">
                                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.FirstName, "", new { style = "color: red", @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="small-6 columns">
                            <div class="form-group">
                                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.LastName, "", new { style = "color: red", @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="small-6 columns">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Email, "", new { style = "color: red", @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="small-6 columns">
                            <div class="form-group">
                                @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.DOB, "", new { style = "color: red", @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="small-6 columns">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Address, "", new { style = "color: red", @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="small-6 columns">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Phone, "", new { style = "color: red", @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    @{
                        if (Session["Role"].ToString() == "Admin")
                        {
                            <div class="row">
                                <div class="small-12 columns">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Role, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.Role, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Role, "", new { style = "color: red", @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    }
                    @if (ViewBag.error != null)
                    {
                        <span style="color:red">@ViewBag.error</span>
                    }
                    <div class="row" style="margin: 20px auto">
                        <button type="submit" class="btnSubmit">Edit</button>
                        <button type="reset" class="btnSubmit">Clear</button>
                    </div>
                    <div>
                        @{
                            if (Session["Role"] != null)
                            {
                                if (Session["Role"].ToString() == "Admin")
                                {
                                    @Html.ActionLink("Back to List", "List", "Users")
                                }
                                else if (Session["Role"].ToString() == "User")
                                {
                                    @Html.ActionLink("Back to Details", "Details", "Users", new { id = Session["id"].ToString() }, null)
                                }
                            }
                        }
                    </div>
                </div>
                </div>
        </body>
    }




